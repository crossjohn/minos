@model HpAer.Models.Direccion

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Agregar Direccion</h4>
</div>

        @{
             ViewBag.Title = "Create";
        }

        @using (Html.BeginForm())
        {
           
    <div class="modal-body">
        
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.paisId, "Pais *", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.DropDownListFor(model => model.paisId, Model.AvailablePaises, htmlAttributes: new { @class = "form-control", @id = "paisId" })
                    @Html.ValidationMessageFor(model => model.paisId, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.provinciaId, "Provincia *", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.DropDownListFor(model => model.provinciaId, Model.AvailableProvincias, htmlAttributes: new { @class = "form-control", @id = "provinciaId" })
                    @Html.ValidationMessageFor(model => model.provinciaId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.localidadId, "Localidad *", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.DropDownListFor(model => model.localidadId, Model.AvailableLocalidades, htmlAttributes: new { @class = "form-control", @id = "localidadId" })
                    @Html.ValidationMessageFor(model => model.localidadId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.barrioId, "Barrio *", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.barrioId, Model.AvailableBarrios, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.barrioId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.calleId, "Calle *", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Calle.calle_nombre, new { htmlAttributes = new { @class = "form-control", @id = "calleId" } })
                    @Html.ValidationMessageFor(model => model.calleId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.numero, "Numero *", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.numero, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.numero, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.piso, "Piso", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.piso, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.piso, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.depto, "Departamento", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.depto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.depto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Torre, "Torre", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Torre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Torre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="modal-footer">
                <input class="btn btn-primary" type="submit" value="Aceptar" /> |
                <a data-dismiss="modal" title="Cancelar" class="btn btn-default"> Cancelar </a>
            </div>

        </div>
        <div class="modal-body">
            <div class="container" id="map_canvas" style="width: 900px; height: 500px; border: 3px solid orange"> </div>
        </div>
    </div>
  }

<script src="http://code.jquery.com/jquery-latest.js" type="text/javascript"></script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBLGK5HzHX1QUsMZ4_QnFUVTvagGgpBLAE"></script>

            <script type="text/javascript">
                $(function () {
                    $("#paisId").change(function () {
                        var selectedItem = $(this).val();
                        var ddlStates = $("#provinciaId");
                        var statesProgress = $("#states-loading-progress");
                        statesProgress.show();
                        $.ajax({
                            cache: false,
                            type: "GET",
                            url: "@(Url.RouteUrl("GetProvinciasByPaisId"))",
                            data: { "paisId": selectedItem },
                            success: function (data) {
                                ddlStates.html('');
                                $.each(data, function (id, option) {
                                    ddlStates.append($('<option></option>').val(option.id).html(option.name));
                                });
                                statesProgress.hide();
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                alert('Error cargando provincias.');
                                statesProgress.hide();
                            }

                        });
                    });
                });

                $(function () {
                    $("#provinciaId").change(function () {
                        var selectedItem = $(this).val();
                        var ddlStates = $("#localidadId");
                        var statesProgress = $("#states-loading-progress");
                        statesProgress.show();
                        $.ajax({
                            cache: false,
                            type: "GET",
                            url: "@(Url.RouteUrl("GetLocalidadesByProvinciaId"))",
                            data: { "provinciaId": selectedItem },
                            success: function (data) {
                                ddlStates.html('');
                                $.each(data, function (id, option) {
                                    ddlStates.append($('<option></option>').val(option.id).html(option.name));
                                });
                                ddlStates.append($('<option></option>').val(null).html(null));
                                statesProgress.hide();
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                alert('Error cargando localidades.');
                                statesProgress.hide();
                            }
                        });
                    });
                });

                $(function () {
                    $("#localidadId").change(function () {
                        var selectedItem = $(this).val();
                        var ddlStates = $("#barrioId");
                        var statesProgress = $("#states-loading-progress");
                        statesProgress.show();
                        $.ajax({
                            cache: false,
                            type: "GET",
                            url: "@(Url.RouteUrl("GetBarriosByLocalidadId"))",
                            data: { "localidadId": selectedItem },
                            success: function (data) {
                                ddlStates.html('');
                                $.each(data, function (id, option) {
                                    ddlStates.append($('<option></option>').val(option.id).html(option.name));
                                });
                                statesProgress.hide();
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                alert('Error cargando barrios.');
                                statesProgress.hide();
                            }
                        });
                    });
                });
            </script>

<script type="text/javascript">
    var geocoder;
    var map;
    var marker;
    $('#calleId').focusout(function () {
        //Obtengo el nombre del pais
        var pais = $('#paisId').val();
        // var pais_nombre = pais.options[pais.selectedIndex].text;
        //Obtengo el nombre de la localidad
        var localidad = $('#localidadId').val();
        //var localidad_nombre = localidad.options[localidad.selectedIndex].text;
        //Obtengo el nombre de la provincia
        var provincia = $('#provinciaId').val();
        //var provincia_nombre = provincia.options[provincia.selectedIndex].text;
        //Obtengo el nombre de la calle introducida
        var dir = $('#calleId').val(); // document.getElementById('calleId').value;
        //var direccion = dir + ','+localidad_nombre+','+provincia_nombre+','+pais_nombre;
        if (localidad != null && provincia != null && pais != 'Selects items') {
            var pais_nombre = $('#paisId option:selected').html();
            var localidad_nombre = $('#localidadId option:selected').html();
            var provincia_nombre = $('#provinciaId option:selected').html();

            var direccion = dir + ',' + localidad_nombre + ',' + provincia_nombre + ',' + pais_nombre;
            if (marker != null) {
                marker.setMap(null);
            }
            if (dir.length > 0) {
                mostrarDireccion(direccion);
            }
        }

    })
    $(document).ready(function () {
        ini();
    });
    function ini() {

        crearMapa();
        // GetDireccion();
        crearMarker()

    }
    function crearMapa() {
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(-31.417321454065778, -64.18382406234741);
        var opc = {
            zoom: 12,
            center: latlng,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        }
        map = new google.maps.Map(document.getElementById("map_canvas"), opc);

    }

    function crearMarker() {
        // var marker = null;
        google.maps.event.addListener(map, 'click', function (event) {
            marcar(event.latLng);
        });

    }

    function marcar(localizacion) {
        if (marker != null) {
            marker.setMap(null);
        }
        marker = new google.maps.Marker({
            map: map,
            position: localizacion
        });

        /* var infowindow = new google.maps.InfoWindow({
             content: 'Latitud: ' + localizacion.lat() + '<br> Longitud: ' + localizacion.lng()
         });
         infowindow.open(map, marker);*/
        marcarTextDir(localizacion);
        /*google.maps.event.addListener(marker, 'dblclick', function () {
            marker.setMap(null);
            document.getElementById("calleId").value = null;
        });*/
    }
    function marcarTextDir(latLng) {
        geocoder.geocode({ 'latLng': latLng }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                if (results[0]) {
                    //alert(results[0].formatted_address);
                    var direccion = results[0].formatted_address.split(",");
                    document.getElementById("calleId").value = direccion[0];
                    centrarMapa(latLng);
                }
            }
        });
    }
    function mostrarDireccion(dir) {
        if (geocoder) {

            geocoder.geocode({ 'address': dir }, function (results, status) {
                centrarMapa(results[0].geometry.location)
                if (status == google.maps.GeocoderStatus.OK) {
                    marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location,
                        title: dir
                    });
                    var infowindow = new google.maps.InfoWindow();
                    infowindow.setContent(dir);
                    google.maps.event.addListener(marker, 'click', function () {
                        infowindow.open(map, marker);
                    });

                }
                else {
                    alert('Error');
                }
            });
        }
    }
    function centrarMapa(coordenada) {
        map.setCenter({
            lat: coordenada.lat(),
            lng: coordenada.lng()
        });
    }
    /*function GetDireccion() {
        mostrarDireccion("independencia 27, cordoba", '5000');
    }*/

</script>
<span id="states-loading-progress" style="display: none;">Por favor espere..</span>